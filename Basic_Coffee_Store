/* Using Data Definition Language (DDL), 
create a MySQL database called coffee_store */

CREATE DATABASE coffee_store;

USE coffee_store;

CREATE TABLE products (
	id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(30),
    price DECIMAL(3,2)
);

SHOW TABLES;

CREATE TABLE customers (
	id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(30),
    last_name VARCHAR(30),
    gender ENUM('M','F'),
    phone_number VARCHAR(11)
);

CREATE TABLE orders (
	id INT AUTO_INCREMENT PRIMARY KEY,
	product_id INT,
    customer_id INT,
    order_time DATETIME,
    FOREIGN KEY (product_id) REFERENCES products(id),
    FOREIGN KEY (customer_id) REFERENCES customers(id)
);

ALTER TABLE products
ADD COLUMN coffee_origin VARCHAR(30);

/* Using Data Manipulation Language (DML), 
add data to tables and change values */

INSERT INTO products (name,price,coffee_origin)
VALUES ('Espresso',2.50,'Brazil'),('Macchiato',3.00,'Brazil'),('Cappuccino',3.50,'Costa Rica'),('Latte',3.50,'Indonesia'),('Americano',3.00,'Brazil'),('Flat White',3.50,'Indonesia'),('Filter',3.00,'India');

UPDATE products
SET coffee_origin = 'Sri Lanka'
WHERE id = 7;

INSERT INTO customers (first_name, last_name, gender, phone_number) 
VALUES ('Chris','Martin','M','01123147789'),('Emma','Law','F','01123439899'),('Mark','Watkins','M','01174592013'),('Daniel','Williams','M',NULL),('Sarah','Taylor','F','01176348290'),('Katie','Armstrong','F','01145787353'),('Michael','Bluth','M','01980289282'),('Kat','Nash','F','01176987789'),('Buster','Bluth','M','01173456782'),('Charlie',NULL,'F','01139287883'),('Lindsay','Bluth','F','01176923804'),('Harry','Johnson','M',NULL),('John','Smith','M','01174987221'),('John','Taylor','M',NULL),('Emma','Smith','F','01176984116'),('Gob','Bluth','M','01176985498'),('George','Bluth','M','01176984303'),('Lucille','Bluth','F','01198773214'),('George','Evans','M','01174502933'),('Emily','Simmonds','F','01899284352'),('John','Smith','M','01144473330'),('Jennifer',NULL,'F',NULL),('Toby','West','M','01176009822'),('Paul','Edmonds','M','01966947113');

INSERT INTO orders (product_id,customer_id,order_time) 
VALUES (1,1,'2017-01-01 08-02-11'),(1,2,'2017-01-01 08-05-16'),(5,12,'2017-01-01 08-44-34'),(3,4,'2017-01-01 09-20-02'),(1,9,'2017-01-01 11-51-56'),(6,22,'2017-01-01 13-07-10'),(1,1,'2017-01-02 08-03-41'),(3,10,'2017-01-02 09-15-22'),(2,2,'2017-01-02 10-10-10'),(3,13,'2017-01-02 12-07-23'),(1,1,'2017-01-03 08-13-50'),(7,16,'2017-01-03 08-47-09'),(6,21,'2017-01-03 09-12-11'),(5,22,'2017-01-03 11-05-33'),(4,3,'2017-01-03 11-08-55'),(3,11,'2017-01-03 12-02-14'),(2,23,'2017-01-03 13-41-22'),(1,1,'2017-01-04 08-08-56'),(3,10,'2017-01-04 11-23-43'),(4,12,'2017-01-05 08-30-09'),(7,1,'2017-01-06 09-02-47'),(3,18,'2017-01-06 13-23-34'),(2,16,'2017-01-07 09-12-39'),(2,14,'2017-01-07 11-24-15'),(4,5,'2017-01-08 08-54-11'),(1,1,'2017-01-09 08-03-11'),(6,20,'2017-01-10 10-34-12'),(3,3,'2017-01-10 11-02-11'),(4,24,'2017-01-11 08-39-11'),(4,8,'2017-01-12 13-20-13'),(1,1,'2017-01-14 08-27-10'),(4,15,'2017-01-15 08-30-56'),(1,7,'2017-01-16 10-02-11'),(2,10,'2017-01-17 09-50-05'),(1,1,'2017-01-18 08-22-55'),(3,9,'2017-01-19 09-00-19'),(7,11,'2017-01-19 11-33-00'),(6,12,'2017-01-20 08-02-21'),(3,14,'2017-01-21 09-45-50'),(5,2,'2017-01-22 10-10-34'),(6,24,'2017-01-23 08-32-19'),(6,22,'2017-01-23 08-45-12'),(6,17,'2017-01-23 12-45-30'),(2,11,'2017-01-24 08-01-27'),(1,1,'2017-01-25 08-05-13'),(6,11,'2017-01-26 10-49-10'),(7,3,'2017-01-27 09-23-57'),(7,1,'2017-01-27 10-08-16'),(3,18,'2017-01-27 10-13-09'),(4,19,'2017-01-27 11-02-40'),(3,10,'2017-01-28 08-03-21'),(1,2,'2017-01-28 08-33-28'),(1,12,'2017-01-28 11-55-33'),(1,13,'2017-01-29 09-10-17'),(6,6,'2017-01-30 10-07-13'),(1,1,'2017-02-01 08-10-14'),(2,14,'2017-02-02 10-02-11'),(7,10,'2017-02-02 09-43-17'),(7,20,'2017-02-03 08-33-49'),(4,21,'2017-02-04 09-31-01'),(5,22,'2017-02-05 09-07-10'),(3,23,'2017-02-06 08-15-10'),(2,24,'2017-02-07 08-27-26'),(1,1,'2017-02-07 08-45-10'),(6,11,'2017-02-08 10-37-10'),(3,13,'2017-02-09 08-58-18'),(3,14,'2017-02-10 09-12-40'),(5,4,'2017-02-10 11-05-34'),(1,2,'2017-02-11 08-00-38'),(3,8,'2017-02-12 08-08-08'),(7,20,'2017-02-12 09-22-10'),(1,1,'2017-02-13 08-37-45'),(5,2,'2017-02-13 12-34-56'),(4,3,'2017-02-14 08-22-43'),(5,4,'2017-02-14 09-12-56'),(3,5,'2017-02-15 08-09-10'),(6,7,'2017-02-15 09-05-12'),(1,8,'2017-02-15 09-27-50'),(2,9,'2017-02-16 08-51-12'),(3,10,'2017-02-16 13-07-46'),(4,11,'2017-02-17 08-03-55'),(4,12,'2017-02-17 09-12-11'),(5,10,'2017-02-17 11-41-17'),(6,18,'2017-02-17 13-05-56'),(7,19,'2017-02-18 08-33-27'),(1,17,'2017-02-19 08-12-31'),(1,1,'2017-02-20 09-50-17'),(3,5,'2017-02-20 09-51-29'),(4,6,'2017-02-20 10-43-39'),(3,1,'2017-02-21 08-32-17'),(1,1,'2017-02-21 10-30-11'),(3,2,'2017-02-21 11-08-45'),(4,3,'2017-02-22 11-46-32'),(2,15,'2017-02-22 13-35-16'),(6,13,'2017-02-23 08-34-48'),(4,24,'2017-02-24 08-32-03'),(2,13,'2017-02-25 08-03-12'),(7,17,'2017-02-25 09-34-23'),(7,23,'2017-02-25 11-32-54'),(5,12,'2017-02-26 11-47-34'),(6,4,'2017-02-27 12-12-34'),(1,1,'2017-02-28 08-59-22');

--This will allow updates to occur based off of columns other than the primary key

SET SQL_SAFE_UPDATES=0; 

--Changing table values due to mislabeled shipping packages or human error

UPDATE products
SET price = 3.25, coffee_origin = 'Ethiopia'
WHERE name = 'Americano';

UPDATE products
SET coffee_origin = 'Columbia'
WHERE coffee_origin = 'Brazil';

-- Exercises using SELECT STATMENTS 

/* From the customers table, select the first name and phone number 
for all the females who have the last name of Bluth */

SELECT first_name, phone_number FROM customers
WHERE gender = 'F'
AND last_name = 'Bluth';

/* From the products table, select the name for all the products 
that have a price greater than 3.00 or a coffee origin of Sri Lanka */

SELECT name FROM products
Where price > 3.00
OR coffee_origin = 'Sri Lanka';

/* How many male customers don't have a phone number 
entered into the customers table? */

SELECT COUNT(*) FROM customers
WHERE gender = 'M'
AND phone_number IS NULL;

/* From the products table, select the name and price of all products 
with a coffee origin equal to Colombia or Indonesia. Ordered by name from A-Z */

SELECT name, price FROM products
WHERE coffee_origin IN ('Colombia','Indonesia')
ORDER BY name;

/* From the orders table, select all the orders 
from February 2017 for customers with id's of 2,4,6, or 8 */

	--Solution using BETWEEN
	
SELECT * FROM orders
WHERE order_time BETWEEN '2017-02-01' AND '2017-02-28'
AND customer_id IN (2,4,6,8);

	--Solution using Date Funtions
	
SELECT * FROM orders
WHERE MONTH(order_time) = 02
AND YEAR(order_time) = 2017
AND customer_id IN (2,4,6,8);

/* From the customers table, select the first name and phone number 
of all customers who's last name contains the pattern 'ar' */

SELECT first_name, phone_number FROM customers
WHERE last_name LIKE '%ar%';

/* From the customers table, select distinct last names 
and order alphabetically from A-Z */

	--Solution using DISTINCT
	
SELECT DISTINCT(last_name) FROM customers
ORDER BY last_name;

	--Solution using ROW_NUMBER
	
WITH LastNames AS
(
	SELECT *, ROW-NUMBER() OVER(PARTITION BY last_name) AS ranks
	FROM customers
)
SELECT last_name FROM LastNames
WHERE ranks = 1
ORDER BY last_name;

/* From the orders table, select the first 3 orders 
placed by customer with id 1, in February 2017 */

SELECT * FROM orders
WHERE customer_id = 1
AND YEAR(order_time) = 2017
AND Month(order_time) = 02
ORDER BY order_time ASC
LIMIT 3;

/* From the products table, select the name, price and coffee origin
but rename the price to retail_price in the results set */

SELECT name, price AS retail_price, coffee_origin FROM products;

--Exercises using JOINS

/* Select the order id and customer phone numbers 
for all orders of product id 4 */

SELECT o.id, c.phone_number FROM orders o
JOIN customers c ON o.customer_id = c.id
WHERE o.product_id = 4;

/* Select product name and order time 
for filter coffees sold between January 15th 2017 and February 14th 2017 */

SELECT p.name, o.order_time FROM orders o
Join products p ON o.product_id = p.id
WHERE p.name = 'Filter'
AND order_time BETWEEN '2017-01-15' AND '2017-02-14';

/*Select the product name, price, and order time 
for all orders from females in January 2017 */

SELECT p.name, p.price, o.order_time FROM orders o
JOIN products p ON o.product_id = p.id
JOIN customers c ON o.customer_id = c.id
WHERE c.gender = 'F'
AND YEAR(o.order_time) = 2017
AND MONTH(o.order_time) = 01;
